<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.1.xsd" 
	>
	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		    <list>
				<value>classpath:jdbc.properties</value>
		    </list>
		</property>
	</bean>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${jdbc.username}"/>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${jdbc.password}"/>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="60"/>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="20"/>
		
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingResources">
            <list>
				<value>com/xnjd/hynm/model/Account.hbm.xml</value>
				<value>com/xnjd/hynm/model/Event.hbm.xml</value>
				<value>com/xnjd/hynm/model/Journal.hbm.xml</value>
				<value>com/xnjd/hynm/model/Evaluation.hbm.xml</value>
				<value>com/xnjd/hynm/model/Paigu.hbm.xml</value>
				<value>com/xnjd/hynm/model/Customer.hbm.xml</value>
				<value>com/xnjd/hynm/model/Device.hbm.xml</value>
				<value>com/xnjd/hynm/model/PeriodicEvent.hbm.xml</value>
			</list>
        </property>
		 <!-- 设置Hibernate的相关属性 -->
		<property name="hibernateProperties">
			<props>
			    <!-- 设置Hibernate的数据库方言为MySQL5Dialect -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 是否格式化sql语句 -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- 设置Hibernate是否在控制台输出SQL语句，开发调试阶段通常设为true -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- 设置Hibernate一个提交批次中的最大SQL语句数 -->
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>

				<prop key="hibernate.hbm2ddl.auto">update</prop>   

			</props>
		</property>
	</bean>
	<!--定义Hibernate的事务管理器HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 依赖注入上面定义的sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<!-- <tx:method name="*" read-only="true" /> -->
		</tx:attributes>
	</tx:advice>
    <!-- 指定哪些类的哪些方法参与事务管理 -->
	<aop:config >
		<aop:pointcut id="allServiceMethod" expression="execution(* com.xnjd.hynm.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>

	<bean name="dataAccessUtil" class="com.xnjd.hynm.dao.DataAccessUtil">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 验证码实体 -->
	<bean name="securityCodeImageAction" class="com.xnjd.hynm.action.SecurityCodeImageAction"
		scope="prototype">
	</bean>

	<import resource="conf/spring/admin/di-dao.xml" />
	<import resource="conf/spring/admin/di-service.xml" />	
	<import resource="conf/spring/admin/di-action.xml" />
	<import resource="conf/spring/event/di-dao.xml" />
	<import resource="conf/spring/event/di-service.xml" />	
	<import resource="conf/spring/event/di-action.xml" />
	<import resource="conf/spring/journal/di-dao.xml"/>
	<import resource="conf/spring/journal/di-service.xml"/>
	<import resource="conf/spring/journal/di-action.xml"/>
	<import resource="conf/spring/evaluation/di-dao.xml"/>
	<import resource="conf/spring/evaluation/di-service.xml"/>
	<import resource="conf/spring/evaluation/di-action.xml"/>
	<import resource="conf/spring/paigu/di-dao.xml"/>
	<import resource="conf/spring/paigu/di-service.xml"/>
	<import resource="conf/spring/paigu/di-action.xml"/>
	<import resource="conf/spring/customer/di-dao.xml"/>
	<import resource="conf/spring/customer/di-service.xml"/>
	<import resource="conf/spring/customer/di-action.xml"/>
	<import resource="conf/spring/device/di-dao.xml"/>
	<import resource="conf/spring/device/di-service.xml"/>
	<import resource="conf/spring/device/di-action.xml"/>
	<import resource="conf/spring/search/di-dao.xml"/>
	<import resource="conf/spring/search/di-service.xml"/>
	<import resource="conf/spring/search/di-action.xml"/>
	<bean name="fileDownloadAction" class="com.xnjd.hynm.action.FileDownloadAction"
		scope="prototype">
	</bean>
	<bean name="jfreechartAction" class="com.xnjd.hynm.action.JfreechartAction" 
	scope="prototype">
	</bean>
	<bean name="regularlyCreateEvent" class="com.xnjd.hynm.listener.RegularlyCreateEvent">
	   <property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
</beans>